	*(.text.tee_time_get_sys_time)
	*(.text.udelay)
	*(.text.cpu_idle)
	*(.text.arm_cntpct_get_sys_time)
	*(.text.plat_prng_add_jitter_entropy)
	*(.text.__cpu_spin_lock)
	*(.text.__cpu_spin_trylock)
	*(.text.__cpu_spin_unlock)
	*(.text.tlbi_all)
	*(.text.do_dcsw_op)
	*(.text.dcache_op_louis)
	*(.text.icache_inv_all)
	*(.text.thread_resume)
	*(.text.thread_smc)
	*(.text.thread_init_vbar)
	*(.text.__thread_enter_user_mode)
	*(.text.thread_unwind_user_mode)
	*(.text.thread_excp_vect)
	*(.text.el0_svc)
	*(.text.el1_sync_abort)
	*(.text.el0_sync_abort)
	*(.text.elx_irq)
	*(.text.elx_fiq)
	*(.text.thread_cpu_off_handler)
	*(.text._assert_trap)
	*(.text.thread_lazy_save_ns_vfp)
	*(.text.thread_lazy_restore_ns_vfp)
	*(.text.select_vector_wa_spectre_v2)
	*(.text.thread_system_reset_handler)
	*(.text.thread_get_exceptions)
	*(.text.select_vector_wa_spectre_bhb)
	*(.text.thread_set_exceptions)
	*(.text.thread_mask_exceptions)
	*(.text.thread_unmask_exceptions)
	*(.text.thread_alloc_and_run)
	*(.text.thread_resume_from_rpc)
	*(.text.thread_get_saved_thread_sp)
	*(.text.thread_state_free)
	*(.text.thread_init_per_cpu)
	*(.text.thread_kernel_save_vfp)
	*(.text.thread_kernel_restore_vfp)
	*(.text.thread_user_enable_vfp)
	*(.text.thread_user_save_vfp)
	*(.text.thread_state_suspend)
	*(.text.thread_svc_handler)
	*(.text.mobj_get_va)
	*(.text.mobj_matches)
	*(.text.mobj_get_cookie)
	*(.text.rpc_shm_mobj_alloc)
	*(.text.thread_rpc_free_arg)
	*(.text.mobj_put)
	*(.text.thread_rpc_alloc_arg.constprop.0)
	*(.text.get_rpc_arg.constprop.0)
	*(.text.thread_handle_fast_smc)
	*(.text.thread_handle_std_smc)
	*(.text.thread_disable_prealloc_rpc_cache)
	*(.text.thread_enable_prealloc_rpc_cache)
	*(.text.thread_rpc_cmd)
	*(.text.thread_std_smc_entry)
	*(.text.thread_rpc)
	*(.text.thread_foreign_intr_exit)
	*(.text.handle_user_mode_panic)
	*(.text.get_core_pos)
	*(.text.save_abort_info_in_tsd)
	*(.text.abort_is_user_exception)
	*(.text.__print_abort_info)
	*(.text.__abort_print)
	*(.text.abort_print)
	*(.text.abort_print_error)
	*(.text.abort_handler)
	*(.text.vfp_is_enabled)
	*(.text.vfp_enable)
	*(.text.vfp_disable)
	*(.text.vfp_lazy_save_state_init)
	*(.text.vfp_lazy_save_state_final)
	*(.text.vfp_lazy_restore_state)
	*(.text.vfp_save_extension_regs)
	*(.text.vfp_restore_extension_regs)
	*(.text.plat_trace_ext_puts)
	*(.text.trace_ext_puts)
	*(.text.trace_ext_get_thread_id)
	*(.text.trace_ext_get_core_id)
	*(.text.get_core_pos_mpidr)
	*(.text.plat_primary_init_early)
	*(.text.__panic_at_smc_return)
	*(.text.boot_cpu_on_handler)
	*(.text.cpu_on_handler)
	*(.text.unhandled_cpu)
	*(.text.print_kernel_stack)
	*(.text.dummy.__thread_std_smc_entry)
	*(.text.arch_va2pa_helper)
	*(.text.cpu_mmu_enabled)
	*(.text.core_mmu_get_user_mapping_entry.constprop.0)
	*(.text.core_mmu_find_table)
	*(.text.core_mmu_set_entry_primitive)
	*(.text.core_mmu_user_va_range_is_defined)
	*(.text.core_mmu_get_user_va_range)
	*(.text.core_mmu_user_mapping_is_active)
	*(.text.core_mmu_get_user_map)
	*(.text.core_mmu_set_user_map)
	*(.text.core_mmu_get_fault_type)
	*(.text.cpu_spin_lock_xsave_dldetect)
	*(.text.reg_shm_unmap_helper)
	*(.text.to_mobj_reg_shm)
	*(.text.mobj_reg_shm_get_pa)
	*(.text.mobj_reg_shm_get_cookie)
	*(.text.mobj_reg_shm_matches)
	*(.text.cpu_spin_unlock_xrestore)
	*(.text.reg_shm_free_helper)
	*(.text.mobj_reg_shm_free)
	*(.text.mobj_reg_shm_alloc)
	*(.text.mobj_mapped_shm_alloc)
	*(.text.tee_entry_get_api_call_count)
	*(.text.tee_entry_get_api_uuid)
	*(.text.tee_entry_get_api_revision)
	*(.text.tee_entry_get_os_uuid)
	*(.text.tee_entry_get_os_revision)
	*(.text.__tee_entry_fast)
	*(.text.tee_entry_fast)
	*(.text.stm32_hse_over_frequency)
	*(.text.stm32_rcc_base)
	*(.text.main_secondary_init_gic)
	*(.text.itr_core_handler)
	*(.text.may_spin_lock)
	*(.text.may_spin_unlock)
	*(.text.stm32_rif_access_violation_action)
	*(.text.plat_panic)
	*(.text.plat_abort_handler)
	*(.text.pwr_get_state)
	*(.text.pwr_get_voltage)
	*(.text.pwr_set_low_volt)
	*(.text.pwr_list_voltages)
	*(.text.pwr_regu_unlock)
	*(.text.pwr_regu_lock)
	*(.text.pwr_disable_reg.isra.0)
	*(.text.pwr_set_state)
	*(.text.pwr_set_voltage)
	*(.text.pwr_regu_pm)
	*(.text.pmic_list_voltages)
	*(.text.pmic_get_voltage)
	*(.text.pmic_set_voltage)
	*(.text.pmic_get_state)
	*(.text.pmic_set_state)
	*(.text.driver_unlock)
	*(.text.driver_lock)
	*(.text.pmic_set_flag)
	*(.text.voltage_to_index)
	*(.text.stpmic2_register_read)
	*(.text.stpmic2_register_write)
	*(.text.stpmic2_register_update)
	*(.text.stpmic2_update_en_crs)
	*(.text.stpmic2_regulator_set_state)
	*(.text.stpmic2_regulator_get_state)
	*(.text.stpmic2_regulator_levels_mv)
	*(.text.stpmic2_regulator_get_voltage)
	*(.text.stpmic2_regulator_set_voltage)
	*(.text.stpmic2_regulator_get_prop)
	*(.text.stpmic2_regulator_set_prop)
	*(.text.stm32mp_syscfg_base)
	*(.text.stm32mp_syscfg_write)
	*(.text.stm32mp25_syscfg_enable_io_compensation)
	*(.text.stm32mp25_syscfg_disable_io_compensation)
	*(.text.stm32_pwr_base)
	*(.text.thread_system_off_handler)
	*(.text.thread_cpu_resume_handler)
	*(.text.thread_cpu_suspend_handler)
	*(.text.crypto_rng_add_event)
	*(.text.gic_op_set_pmr)
	*(.text.gic_op_set_ipriority)
	*(.text.gic_save_it)
	*(.text.gic_it_set_cpu_mask.isra.0)
	*(.text.gic_op_add)
	*(.text.gic_op_set_affinity)
	*(.text.gic_op_enable)
	*(.text.gic_op_disable)
	*(.text.gic_it_raise_sgi.part.0)
	*(.text.gic_op_raise_sgi)
	*(.text.gic_op_raise_pi)
	*(.text.gic_restore_it)
	*(.text.gic_cpu_init)
	*(.text.gic_init_setup)
	*(.text.gic_pm)
	*(.text.gic_it_handle)
	*(.text.bsec_base)
	*(.text.bsec_get_otp_status)
	*(.text.is_bsec_write_locked)
	*(.text.otp_bank)
	*(.text.is_fuse_shadowed)
	*(.text.bsec_lock)
	*(.text.bsec_poll_otp_status_busy)
	*(.text.shadow_otp)
	*(.text.bsec_unlock)
	*(.text.stm32_bsec_shadow_read_otp)
	*(.text.stm32_bsec_set_sr_lock)
	*(.text.stm32_bsec_set_sw_lock)
	*(.text.stm32_bsec_read_sw_lock)
	*(.text.stm32_bsec_write_otp)
	*(.text.stm32_gpio_get_bank)
	*(.text.cpu_spin_lock_dldetect)
	*(.text.apply_rif_config)
	*(.text.cpu_spin_unlock)
	*(.text.set_gpio_cfg)
	*(.text.stm32_gpio_pm)
	*(.text.iwdg_wdt_get_timeleft)
	*(.text.iwdg_wdt_init)
	*(.text.stm32_iwdg_pm)
	*(.text.iwdg_wait_sync)
	*(.text.iwdg_timeout_cnt.isra.0)
	*(.text.configure_timeout)
	*(.text.iwdg_wdt_set_timeout)
	*(.text.iwdg_wdt_start)
	*(.text.iwdg_refresh)
	*(.text.iwdg_wdt_refresh)
	*(.text.stm32_iwdg_it_handler)
	*(.text.timeout_init_us)
	*(.text.get_base)
	*(.text.i2c_ack_failed)
	*(.text.i2c_transfer_config)
	*(.text.i2c_wait_stop)
	*(.text.wait_isr_event)
	*(.text.i2c_wait_txis)
	*(.text.stm32_i2c_read_write_membyte)
	*(.text.disable_rng_clock)
	*(.text.enable_rng_clock)
	*(.text.timeout_init_us.constprop.0)
	*(.text.stm32_rng_pm)
	*(.text.io_mask32_stm32shregs)
	*(.text.stm32_tamp_itamper_action)
	*(.text.stm32_tamp_etamper_action)
	*(.text.loc_have_rx_data)
	*(.text.loc_flush)
	*(.text.loc_getchar)
	*(.text.loc_putc)
	*(.text.load_provisioning)
	*(.text.provisioning_pm)
	*(.text.stm32_rif_acquire_semaphore)
	*(.text.stm32_rif_release_semaphore)
	*(.text.stm32_rifsc_cid_is_enabled)
	*(.text.stm32_rifsc_cid_enable)
	*(.text.stm32_rifsc_cid_disable)
	*(.text.stm32_rifsc_check_tdcid)
	*(.text.stm32_risab_clear_illegal_access_flags)
	*(.text.stm32_risab_dump_erroneous_data)
	*(.text.stm32_risaf_clear_illegal_access_flags)
	*(.text.stm32_risaf_dump_erroneous_data)
	*(.text.stm32_serc_handle_ilac)
	*(.text.clk_disable_no_lock)
	*(.text.clk_enable_no_lock)
	*(.text.cpu_spin_lock_xsave_dldetect.constprop.0)
	*(.text.cpu_spin_unlock_xrestore.constprop.0)
	*(.text.clk_is_enabled)
	*(.text.clk_enable)
	*(.text.clk_disable)
	*(.text.clk_get_rate)
	*(.text.clk_stm32_get_priv)
	*(.text.stm32_gate_endisable)
	*(.text.stm32_gate_is_enabled)
	*(.text.clk_stm32_gate_is_enabled)
	*(.text.stm32_gate_wait_ready)
	*(.text.stm32_gate_rdy_enable)
	*(.text.clk_stm32_gate_ready_enable)
	*(.text.stm32_gate_rdy_disable)
	*(.text.clk_stm32_gate_ready_disable)
	*(.text.stm32mp_rcc_clock_id_to_clk)
	*(.text.stm32_rcc_has_access_by_id)
	*(.text.clk_stm32_msi_get_rate)
	*(.text.clk_stm32_osc_disable)
	*(.text.clk_stm32_osc_enable)
	*(.text.clk_stm32_osc_pm_restore)
	*(.text.clk_stm32_osc_msi_set_rate.isra.0)
	*(.text.clk_stm32_msi_set_rate)
	*(.text.clk_stm32_osc_msi_pm_restore)
	*(.text.clk_stm32_clock_frequency_calculator)
	*(.text.clk_stm32_read_hsi_frequency)
	*(.text.clk_stm32_read_msi_frequency)
	*(.text.trim_increase)
	*(.text.trim_table_init)
	*(.text.stm32mp2_clk_hsi_get_cal)
	*(.text.stm32mp2_clk_hsi_set_trim)
	*(.text.stm32_hsi_monitor_it_handler)
	*(.text.stm32mp2_clk_msi_get_cal)
	*(.text.stm32mp2_clk_msi_set_trim)
	*(.text.stm32mp2_clk_init_msi_cal)
	*(.text.stm32mp2_calib_pm)
	*(.text.stm32mp2_clk_init_hsi_cal)
	*(.text.to_rstline)
	*(.text.reset_id2reg_offset)
	*(.text.stm32_reset_assert_clr_offset)
	*(.text.stm32_reset_deassert_clr_offset)
	*(.text.stm32_rproc_a35ss_cfg.isra.0)
	*(.text.stm32mp25_rproc_pm)
	*(.text._assert_trap.constprop.0)
	*(.text._regulator_set_state.isra.0)
	*(.text.unlock_driver.isra.0)
	*(.text.lock_driver.isra.0)
	*(.text.regulator_disable)
	*(.text._regulator_enable)
	*(.text.regulator_enable)
	*(.text.regulator_pm)
	*(.text.regulator_get_voltage)
	*(.text.regulator_set_voltage)
	*(.text.regulator_list_voltages)
	*(.text.fixed_set_state)
	*(.text.fixed_get_state)
	*(.text.vrefbuf_wait_ready)
	*(.text.vrefbuf_set_state)
	*(.text.vrefbuf_pm)
	*(.text.__wdt_sm_handler)
	*(.text.spinlock_count_incr)
	*(.text.spinlock_count_decr)
	*(.text.have_spinlock)
	*(.text._assert_log)
	*(.text._assert_break)
	*(.text.console_putc)
	*(.text.console_flush)
	*(.text.call_callbacks)
	*(.text.pm_change_state)
	*(.text.itr_handle)
	*(.text.itr_add_type_prio)
	*(.text.itr_alloc_add_type_prio)
	*(.text.itr_enable)
	*(.text.itr_raise_pi)
	*(.text.itr_raise_sgi)
	*(.text.__do_panic)
	*(.text.refcount_inc)
	*(.text.refcount_dec)
	*(.text.is_valid_conf_and_notnull_size)
	*(.text.core_is_buffer_inside)
	*(.text.ts_get_current_session_may_fail)
	*(.text.ts_get_current_session)
	*(.text.assert_have_no_spinlock)
	*(.text.cv_signal.constprop.0)
	*(.text.__mutex_unlock.constprop.0)
	*(.text.__mutex_lock.constprop.0)
	*(.text.mutex_unlock)
	*(.text.mutex_lock)
	*(.text.mutex_pm_aware_lock)
	*(.text.mutex_pm_aware_unlock)
	*(.text.condvar_broadcast)
	*(.text.wq_wait_init_condvar)
	*(.text.wq_wait_final)
	*(.text.wq_wake_next)
	*(.text.wq_promote_condvar)
	*(.text.notif_get_value)
	*(.text.notif_send_async)
	*(.text.it_get_value)
	*(.text.it_set_mask)
	*(.text.notif_deliver_atomic_event)
	*(.text.notif_wait)
	*(.text.notif_send_sync)
	*(.text.get_core_local)
	*(.text.thread_check_canaries)
	*(.text.thread_lock_global)
	*(.text.thread_unlock_global)
	*(.text.thread_get_core_local)
	*(.text.thread_get_tmp_sp)
	*(.text.thread_stack_size)
	*(.text.get_stack_limits)
	*(.text.thread_is_from_abort_mode)
	*(.text.thread_is_in_normal_mode)
	*(.text.thread_get_id_may_fail)
	*(.text.thread_stack_start)
	*(.text.thread_get_id)
	*(.text.thread_get_tsd)
	*(.text.thread_get_ctx_regs)
	*(.text.thread_restore_foreign_intr)
	*(.text.is_user_ta_ctx)
	*(.text.to_mobj_with_fobj)
	*(.text.mobj_with_fobj_get_pa)
	*(.text.to_mobj_shm)
	*(.text.mobj_shm_get_pa)
	*(.text.to_mobj_mm)
	*(.text.mobj_mm_get_va)
	*(.text.to_mobj_phys)
	*(.text.mobj_phys_get_va)
	*(.text.mobj_phys_get_pa)
	*(.text.mobj_mm_get_pa)
	*(.text.mobj_shm_alloc)
	*(.text.mobj_get_pa)
	*(.text.vm_va2pa)
	*(.text.vm_pa2va)
	*(.text.va_is_in_map)
	*(.text.find_map_by_type_and_pa)
	*(.text.find_map_by_va)
	*(.text.find_map_by_pa)
	*(.text._pbuf_is_inside)
	*(.text.mmu_lock)
	*(.text.to_user_mode_ctx)
	*(.text.mmu_unlock)
	*(.text.map_pa2va)
	*(.text.core_mmu_nsec_ddr_is_defined)
	*(.text.core_pbuf_is)
	*(.text.core_mmu_set_entry)
	*(.text.core_mmu_unmap_pages)
	*(.text.virt_to_phys)
	*(.text.check_va_matches_pa)
	*(.text.phys_to_virt)
	*(.text.phys_to_virt_io)
	*(.text.io_pa_or_va)
	*(.text.io_pa_or_va_secure)
	*(.text.io_pa_or_va_nsec)
	*(.text.pfree.isra.0)
	*(.text.tee_mm_free)
	*(.text.tee_mm_get_smem)
	*(.text.ftrace_map_lr)
	*(.text.pauth_strip_pac)
	*(.text.unwind_stack_arm64)
	*(.text.print_stack_arm64)
	*(.text.raw_malloc_return_hook)
	*(.text.bget_buf_size.part.0)
	*(.text.malloc_lock)
	*(.text.bget)
	*(.text.bgetz)
	*(.text.brel)
	*(.text.raw_free)
	*(.text.free_helper)
	*(.text.raw_calloc)
	*(.text.raw_realloc)
	*(.text.calloc)
	*(.text.realloc)
	*(.text.free)
	*(.text.memchr)
	*(.text.memcpy)
	*(.text.memset)
	*(.text.strlen)
	*(.text.__vsnprintf)
	*(.text.vsnprintk)
	*(.text.snprintk)
	*(.text.kprintf.constprop.0)
	*(.text.trace_vprintf)
	*(.text.trace_printf)
